{"version":3,"sources":["webpack:///../src/util/is-mobile-device.js","webpack:///../src/util/merge-deep.js","webpack:///../src/store.js","webpack:///../src/util/config-mixin.js","webpack:///../src/components/TopicPanel.vue","webpack:///../src/components/markers-mixin.js","webpack:///../src/components/MapPanel.vue","webpack:///../src/components/Mapboard.vue","webpack:///../src/util/unique-id.js","webpack:///../node_modules/@fortawesome/pro-solid-svg-icons/faSpinner.js","webpack:///../node_modules/@fortawesome/pro-solid-svg-icons/faBook.js","webpack:///../node_modules/@fortawesome/pro-solid-svg-icons/faWrench.js","webpack:///../node_modules/@fortawesome/pro-solid-svg-icons/faUniversity.js","webpack:///../node_modules/@fortawesome/pro-solid-svg-icons/faGavel.js","webpack:///../src/main.js"],"names":["isMobileDevice","const","userAgent","navigator","vendor","window","opera","test","substr","isObject","item","Array","isArray","mergeDeep","target","source","let","output","Object","assign","keys","forEach","key","pvdStore","philaVueDatafetch","pvmStore","philaVueMapping","pvcStore","philaVueComps","getHorizontalTableIdsFromComps","comps","tableIds","comp","options","innerComps","components","tables","innerTableIds","concat","type","tableId","_id","push","createFilteredData","config","topics","compTableIds","filteredData","index","length","getHorizontalTableGroupIdsFromComps","tableGroupId","i","a","createHorizontalTableGroups","tableGroupIds","compTableGroupId","horizontalTableGroups","activeTable","activeTableId","createStore","sources","createSources","parcels","createParcels","initialState","isMobileOrTablet","fullScreen","mapOnly","topicsOnly","fullScreenMapEnabled","candidates","addressEntered","horizontalTables","activeFeature","featureId","appData","propertyBalance","modals","open","map","initialImagery","imagery","mb","state","getters","visibleTableIds","activeTopic","filter","topic","compTableGroup","array","mutations","setIsMobileOrTablet","payload","setMapOnly","setTopicsOnly","setFullScreenMapEnabled","setLocation","location","lat","lng","setWatchPositionOn","watchPositionOn","setHorizontalTableGroupActiveTable","setHorizontalTableFilteredData","t","data","setMapFilters","filters","setMap","setMapBounds","bounds","setMapBoundsBasedOnShape","boundsBasedOnShape","setActiveParcel","parcelLayer","activeParcel","activeAddress","activeMapreg","setActiveFeature","nextActiveFeature","setImageOverlay","imageOverlay","setImageOverlayOpacity","imageOverlayOpacity","setCandidates","setAddressEntered","setPropertyBalance","setDidToggleModal","name","mergeStore","store","center","zoom","pictometry","Vuex","Store","Vue","mixin","created","this","$config","use","document","e","head","getElementsByTagName","createElement","styleSheet","cssText","appendChild","createTextNode","TopicPanel","render","Greeting","TopicComponentGroup","Topic","AnyHeader","AddressInput","AddressCandidateList","FullScreenTopicsToggleTab","defaultAddressTextPlaceholderStyle","topicsContainerStyle","overflow-y","height","min-height","addressContainerStyle","align-items","padding-left","padding-top","padding-bottom","addressInputContainerStyle","stacked","mounted","addEventListener","closeAddressCandidateList","handleWindowResize","watch","geocodeStatus","computed","greetingText","greeting","message","greetingOptions","shouldShowAddressHeader","fullScreenTopicsOnly","shouldShowGreeting","addressHeaderAdditionalHeaderOptions","addressHeaderAdditionalInfo","ahai","headerType","addressHeaderAdditionalHeaderSlots","text","geocode","returned","preText","properties","console","log","join","inputAlign","addressInput","position","addressInputWidth","width","addressInputPlaceholder","placeholder","addressAutocompleteEnabled","autocompleteEnabled","$store","fullScreenTopicsEnabled","topicPanelContainerClass","addressContainerClass","status","dorParcels","dor","address","activeDorAddress","addressA","street_address","addressB","zipCode","zip_code","zip4","zip_4","parts","methods","shouldShowAddressCandidateList","pixelAdjustment","topicsHeight","windowHeight","innerHeight","siteHeaderHeightNum","parseInt","getElementsByClassName","getBoundingClientRect","appFooterHeightNum","innerWidth","defaultAddressTextPlaceholder","wideStyle","toString","narrowStyle","markersMixin","prevActiveFeature","updateFeaturePrev","updateFeatureNext","featureIdPrev","featureIdNext","matchingLayerNext","matchingLayerPrev","layerMap","_layers","layers","values","layer","layerFeatureId","layerTableId","updateMarkerFillColor","bringMarkerToFront","locationMarker","latlng","radius","fillColor","color","weight","opacity","fillOpacity","markersForAddress","markers","geocodeGeom","identifyFeature","addressMarker","coordinates","reverse","geocodeResult","markerType","icon","prefix","shadow","size","markersForTopic","topicMarkers","activeTopicConfig","topicData","markerObject","circleMarkers","mapOverlay","getConfigForTable","marker","items","style","geometry","u","x","props","_featureId","geojsonParcels","features","activeParcelLayer","pwdParcel","geojson","PARCELID","dorParcelFeatures","dorParcel","OBJECTID","apply","geojsonForTopic","topicGeojson","o","n","reactiveGeojsonFeatures","l","c","id","leafletMarkers","getTableFromComps","table","r","innerTable","circleMarker","el","_path","group","_renderer","_rootGroup","removeChild","handleMarkerMouseover","commit","handleMarkerClick","handleMarkerMouseout","nextFillColor","fillColorForCircleMarker","nextStyle","setStyle","MapPanel","on","mixins","cyclomediaMixin","pictometryMixin","Map_","Control","MapAddressInput","MapAddressCandidateList","EsriTiledMapLayer","EsriTiledOverlay","EsriDynamicMapLayer","EsriFeatureLayer","Geojson","CircleMarker","VectorMarker","PngMarker","BasemapToggleControl","BasemapSelectControl","FullScreenMapToggleTab","LocationControl","PictometryButton","CyclomediaButton","CyclomediaRecordingCircle","SvgViewConeMarker","MeasureControl","LegendControl","BasemapTooltip","ControlCorner","zoomToShape","defaultAddress","enabled","$cyclomediaRecordingsClient","cyclomedia","addressInputPosition","basemapSelectControlPosition","measureControlEnabled","mapPanelContainerClass","fullScreenMapOnly","cycloLatlng","orientation","xyz","cycloRotationAngle","yaw","cycloHFov","shouldShowCyclomediaButton","shouldShowPictometryButton","geolocationEnabled","geolocation","activeDorParcel","legendControls","imageOverlayItems","imageOverlayGroup","imageOverlayGroups","overlayGroup","imageOverlayInfo","dynamicMapLayers","regmaps","defaultBasemap","basemap","tiledLayers","activeBasemap","configForBasemap","activeTiledOverlays","tiledOverlays","activeDynamicMaps","activeFeatureLayers","basemaps","imageryBasemaps","hasImageryBasemaps","shouldShowImageryToggle","configFeature","geocodeType","pwd","streetAddress","picOrCycloActive","cyclomediaActive","mapBounds","isGeocoding","value","$nextTick","invalidateSize","czts","dzts","$data","includes","checkBoundsChanges","nextMarkers","tf","setMapToBounds","featureArray","geojsonFeature","geoJSON","Lmarker","p","shouldShowGeojson","shouldShowImageOverlay","shouldShowFeatureLayer","handleMapClick","$controller","getCenter","coords","pictometryConfig","getZoom","updateCyclomediaRecordings","markerId","Mapboard","CyclomediaWidget","PictometryWidget","PictometryLayer","PictometryPngMarker","PictometryViewCone","Popover","mbRootStyle","panels","appDidLoad","initialPopover","hash","slots","shouldShowHeader","header","rootClass","plugin","shouldLoadCyclomediaWidget","shouldLoadPictometryWidget","shouldShowTopicPanel","shouldShowMapPanel","active","hFov","pictometryActive","pictometryZoom","pictometryShowAddressMarker","geocodeData","ak","host","hostname","apiKey","pictometryDev","pictometryCity","pictometryCityDev","pictometryLocal","sk","secretKey","popoverOpen","popover","popoverText","popoverOptions","nextValue","generateUniqueId","Math","random","substring","unwrapExports","__esModule","prototype","hasOwnProperty","call","default","createCommonjsModule","exports","faSpinner","defineProperty","ligatures","svgPathData","iconName","definition","add","faBook","faWrench","faUniversity","faGavel","controllerMixin","assignTableIds","assignHorizontalTableGroupIds","horizontalTableGroupId","initMapboard","clientConfig","baseConfigUrl","baseConfig","axios","get","then","response","baseConfigFn","eval","gatekeeperKey","configMixin","component","FontAwesomeIcon","customComps","vm","h","catch","err","error"],"mappings":"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","file":"mapboard.js","sourcesContent":["export default function () {\n  const mobileOrTabletRegexA = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\n  const mobileOrTabletRegexB = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i;\n\n  // get the user agent and test against both regex patterns\n  const userAgent = (navigator.userAgent || navigator.vendor || window.opera || '');\n  const isMobileOrTablet = (mobileOrTabletRegexA.test(userAgent) ||\n                            mobileOrTabletRegexB.test(userAgent.substr(0,4)));\n\n  return isMobileOrTablet;\n};\n","// http://stackoverflow.com/a/37164538/676001\n\n// helper to verify that an item is an object\nexport function isObject(item) {\n  return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\n};\n\n// merges n objects, deeply, immutably\nexport default function mergeDeep(target, source) {\n  let output = Object.assign({}, target);\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach(key => {\n      if (isObject(source[key])) {\n        if (!(key in target))\n          Object.assign(output, { [key]: source[key] });\n        else\n          output[key] = mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(output, { [key]: source[key] });\n      }\n    });\n  }\n  return output;\n};\n","import Vue from 'vue';\nimport Vuex from 'vuex';\nimport isMobileDevice from './util/is-mobile-device';\nimport philaVueDatafetch from '@cityofphiladelphia/phila-vue-datafetch'\nimport philaVueMapping from '@cityofphiladelphia/phila-vue-mapping';\nimport philaVueComps from '@cityofphiladelphia/phila-vue-comps';\nimport mergeDeep from './util/merge-deep';\n\nconst pvdStore = philaVueDatafetch.pvdStore\nconst pvmStore = philaVueMapping.pvmStore\nconst pvcStore = philaVueComps.pvcStore\n\n// when you load vuex from a script tag this seems to happen automatically\nVue.use(Vuex);\n\n// this grabs horizontal table ids from an array of topic components,\n// recursively\nfunction getHorizontalTableIdsFromComps(comps = []) {\n  // console.log('getHorizontalTableIdsFromComps is running, comps:', comps);\n\n  let tableIds = [];\n\n  for (let comp of comps) {\n    const options = comp.options || {};\n    const innerComps = options.components || options.tables;\n\n    // if this is a \"group\" component, recurse\n    if (innerComps) {\n      const innerTableIds = getHorizontalTableIdsFromComps(innerComps);\n      tableIds = tableIds.concat(innerTableIds);\n      continue;\n    }\n\n    // skip comps that aren't horizontal tables\n    if (comp.type !== 'horizontal-table') {\n      continue;\n    }\n\n    const tableId = comp._id;\n\n    tableIds.push(tableId);\n  }\n\n  return tableIds;\n}\n\n// this makes the empty filtered data object given a list of topics.\nfunction createFilteredData(config) {\n  const topics = config.topics;\n  let tableIds = [];\n\n  for (let topic of topics) {\n    const comps = topic.components;\n    const compTableIds = getHorizontalTableIdsFromComps(comps);\n    tableIds = tableIds.concat(compTableIds);\n  }\n\n  // console.log('createFilteredData is running, tableIds:', tableIds);\n\n  // const filteredData = tableIds.reduce((acc, tableId) => {\n  //   acc[tableId] = [];\n  //   return acc;\n  // }, {});\n\n  let filteredData = {}\n  for (let index=0; index < tableIds.length; index++) {\n    filteredData[tableIds[index]] = [];\n  }\n\n  return filteredData;\n}\n\n// this grabs table group ids from an array of topic components\nfunction getHorizontalTableGroupIdsFromComps(comps = []) {\n  // console.log('getHorizontalTableGroupIdsFromComps is running, comps:', comps);\n  let tableGroupId;\n\n  for (let comp of comps) {\n    const options = comp.options || {};\n    const innerComps = options.components || options.tables;\n\n    // console.log('getHorizontalTableGroupIdsFromComps, comp:', comp);\n\n    // if this is a \"group\" component, recurse\n    if (!innerComps) {\n      continue;\n    }\n\n    // console.log('getTableGroupIdsFromComps, comp.type:', comp.type);\n\n    // skip comps that aren't horizontal tables\n    if (comp.type !== 'horizontal-table-group') {\n      continue;\n    }\n\n    tableGroupId = comp._id;\n    // console.log('getHorizontalTableGroupIdsFromComps, tableGroupId:', tableGroupId);\n  }\n\n  return tableGroupId;\n}\n\n// this makes the empty horizontalTableGroups object given a list of topics.\nfunction createHorizontalTableGroups(config) {\n  const topics = config.topics;\n\n  let tableGroupIds = [];\n\n  for (let topic of topics) {\n    const comps = topic.components;\n    const compTableGroupId = getHorizontalTableGroupIdsFromComps(comps);\n    if (compTableGroupId) tableGroupIds.push(compTableGroupId);\n  }\n  // console.log('createHorizontalTableGroups is running, config:', config, 'tableGroupIds:', tableGroupIds);\n\n  let horizontalTableGroups = {};\n\n  for (let tableGroupId of tableGroupIds) {\n    horizontalTableGroups[tableGroupId] = {\n      activeTable: null,\n      activeTableId: null\n    };\n  }\n  return horizontalTableGroups;\n}\n\nfunction createStore(config) {\n  const sources = pvdStore.createSources(config);\n  const parcels = pvdStore.createParcels(config);\n\n  const initialState = {\n    isMobileOrTablet: isMobileDevice(),\n    fullScreen: {\n      mapOnly: false,\n      topicsOnly: false,\n    },\n    fullScreenMapEnabled: false,\n    // fullScreenTopicsEnabled: false,\n    candidates: [],\n    addressEntered: null,\n    parcels,\n    sources,\n    horizontalTables: {\n      // table id => filtered rows\n      filteredData: createFilteredData(config),\n    },\n    horizontalTableGroups: createHorizontalTableGroups(config),\n    activeFeature: {\n      featureId: null,\n      tableId: null\n    },\n    appData: {\n      propertyBalance: 0,\n    },\n    modals: {\n      keys: config.modals,\n      open: '',\n    },\n    map: {}\n  };\n\n  if (config.map.initialImagery) {\n    initialState.map.imagery = config.map.initialImagery;\n  }\n\n  const mb = {\n    state: initialState,\n    getters: {\n      visibleTableIds(state) {\n        // get active topic\n        const activeTopic = state.activeTopic;\n\n        if (!activeTopic) {\n          return [];\n        }\n\n        // get horizontal table ids for that topic\n        const activeTopicConfig = (config.topics.filter(topic => topic.key === activeTopic) || [])[0];\n        const comps = activeTopicConfig.components;\n\n        const compTableGroup = getHorizontalTableGroupIdsFromComps(comps);\n        if (compTableGroup) {\n          // even though there is only 1 value, it has to be in array form in the state\n          const array = [];\n          array.push(state.horizontalTableGroups[compTableGroup].activeTableId);\n          return array;\n        } else {\n          const compTables = getHorizontalTableIdsFromComps(comps);\n          return compTables;\n        }\n      }\n    },\n    mutations: {\n\n      setIsMobileOrTablet(state, payload) {\n        state.isMobileOrTablet = payload;\n      },\n      setMapOnly(state, payload) {\n        state.fullScreen.mapOnly = payload;\n      },\n      setTopicsOnly(state, payload) {\n        state.fullScreen.topicsOnly = payload;\n      },\n      setFullScreenMapEnabled(state, payload) {\n        state.fullScreenMapEnabled = payload;\n      },\n      // setFullScreenTopicsEnabled(state, payload) {\n      //   state.fullScreenTopicsEnabled = payload;\n      // },\n      setLocation(state, payload) {\n        state.map.location.lat = payload.lat;\n        state.map.location.lng = payload.lng;\n      },\n      setWatchPositionOn(state, payload) {\n        state.map.watchPositionOn = payload;\n      },\n\n      setHorizontalTableGroupActiveTable(state, payload) {\n        // console.log('setHorizontalTableGroupActiveTable, payload:', payload);\n        state.horizontalTableGroups[payload.tableGroupId].activeTableId = payload.activeTableId;\n        state.horizontalTableGroups[payload.tableGroupId].activeTable = payload.activeTable;\n      },\n      setHorizontalTableFilteredData(state, payload) {\n        const { tableId, data } = payload;\n\n        // check for not-null table id\n        if (!tableId) return;\n\n        state.horizontalTables.filteredData[tableId] = data;\n      },\n\n      setMapFilters(state, payload) {\n        state.map.filters = payload;\n      },\n\n      setMap(state, payload) {\n        state.map.map = payload.map;\n      },\n\n\n      setMapBounds(state, payload) {\n        // const { northEast, southWest } = payload || {};\n        // state.map.bounds.northEast = northEast;\n        // state.map.bounds.southWest = southWest;\n        state.map.bounds = payload;\n      },\n      setMapBoundsBasedOnShape(state, payload) {\n        state.map.boundsBasedOnShape = payload\n      },\n      setActiveParcel(state, payload) {\n        // console.log('store setActiveParcel:', payload)\n        const { parcelLayer, activeParcel, activeAddress, activeMapreg } = payload || {};\n        state.parcels[parcelLayer].activeParcel = activeParcel;\n        state.parcels[parcelLayer].activeAddress = activeAddress;\n        state.parcels[parcelLayer].activeMapreg = activeMapreg;\n      },\n\n      setActiveFeature(state, payload) {\n        // console.log('store setActiveFeature is running');\n        const { featureId, tableId } = payload || {};\n        const nextActiveFeature = { featureId, tableId };\n        state.activeFeature = nextActiveFeature;\n      },\n\n      setImageOverlay(state, payload) {\n        state.map.imageOverlay = payload;\n      },\n      setImageOverlayOpacity(state, payload) {\n        state.map.imageOverlayOpacity = payload;\n      },\n      setCandidates(state, payload) {\n        state.candidates = payload;\n      },\n      setAddressEntered(state, payload) {\n        state.addressEntered = payload;\n      },\n\n      setPropertyBalance(state, payload) {\n        state.appData.propertyBalance = payload;\n      },\n      setDidToggleModal(state, name) {\n        // console.log('setDidToggleModal, name:', name, 'open:', open);\n        // console.log('setDidToggleModal, name:', name);\n        // state.modals[name].open = open === null ? !state.modals[name].open : open\n        state.modals.open = name;\n      },\n    }\n  }\n\n  let mergeStore = mergeDeep(pvdStore.store, pvmStore);\n  mergeStore = mergeDeep(mergeStore, pvcStore);\n  mergeStore = mergeDeep(mergeStore, mb);\n  // let mergeStore = mergeDeep(mb, pvdStore.store);\n  // mergeStore = mergeDeep(mergeStore, pvmStore);\n  // mergeStore = mergeDeep(mergeStore, pvcStore);\n\n  // reset the map center and zoom based on the config\n  mergeStore.state.map.center = config.map.center;\n  mergeStore.state.map.zoom = config.map.zoom;\n  mergeStore.state.pictometry.map.center = config.map.center;\n  mergeStore.state.pictometry.map.zoom = config.map.zoom;\n  // mergeStore.state.pictometry.enabled = config.pictometry.enabled;\n  // mergeStore.state.cyclomedia.enabled = config.cyclomedia.enabled;\n\n  // console.log('mergeStore:', mergeStore);\n\n  // TODO standardize how payloads are passed around/handled\n  return new Vuex.Store({\n    state: mergeStore.state,\n    getters: mergeStore.getters,\n    mutations: mergeStore.mutations\n  });\n}\n\nexport default createStore;\n","// shout out to airyland\n// https://github.com/airyland/vue-config/blob/master/index.js\n\nexport default (Vue, config) => {\n  Vue.mixin({\n    created() {\n      this.$config = config;\n    }\n  });\n};\n","<template>\n  <div id=\"topic-panel-container\"\n       :class=\"'mb-panel-topics cell ' + this.topicPanelContainerClass\"\n  >\n    <full-screen-topics-toggle-tab v-once\n                                   v-if=\"!this.fullScreenTopicsOnly\"\n    />\n\n    <!-- address header - it only shows if the app is set to \"fullScreenTopicsOnly\" or there is a geocode -->\n    <div class=\"address-header cell small-24 medium-24\"\n         v-if=\"this.shouldShowAddressHeader\"\n    >\n      <div :class=\"'address-container columns ' +  this.addressContainerClass\"\n           :style=\"this.addressContainerStyle\"\n      >\n\n        <div v-if=\"!this.address\"\n             class=\"default-address-text\"\n             :style=\"this.defaultAddressTextPlaceholderStyle\"\n        >\n          {{ this.$config.defaultAddressTextPlaceholder.text }}\n        </div>\n        <h1 class=\"address-header-line-1\">\n        <!-- there is no map marker if there is no map -->\n          <font-awesome-icon icon=\"map-marker-alt\"\n                             v-if=\"!this.fullScreenTopicsOnly\"\n          />\n          <!-- <i class=\"fa fa-map-marker-alt\"\n             v-if=\"!this.fullScreenTopicsOnly\"\n          ></i> -->\n          {{ address }}\n        </h1>\n        <!-- <div class=\"address-header-line-2\"\n             v-show=\"!this.geocode\"\n        >\n\n        </div> -->\n        <div v-show=\"this.geocode\"\n             class=\"address-header-line-2\"\n        >\n          PHILADELPHIA, PA {{ zipCode }}\n        </div>\n        <any-header v-if=\"this.addressHeaderAdditionalInfo\"\n                    :options=\"this.addressHeaderAdditionalHeaderOptions\"\n                    :slots=\"this.addressHeaderAdditionalHeaderSlots\"\n        />\n          <!-- <div class=\"address-header-line-3\"\n          >\n            {{ addressHeaderAdditionalInfo }}\n          </div> -->\n        <!-- </any-header> -->\n        <!-- <div class=\"address-header-line-3\"\n             v-if=\"this.addressHeaderAdditionalInfo && !this.addressHeaderAdditionalHeaderOptions\"\n        >\n          {{ addressHeaderAdditionalInfo }}\n        </div> -->\n\n      </div>\n\n      <div class=\"address-input-container columns small-24 medium-12 large-12\"\n           :style=\"this.addressInputContainerStyle\"\n           v-if=\"this.fullScreenTopicsEnabled && !this.stacked || this.fullScreenTopicsOnly\"\n      >\n        <address-input :widthFromConfig=\"this.addressInputWidth\"\n                       :placeholder=\"this.addressInputPlaceholder\"\n        >\n          <address-candidate-list v-if=\"this.addressAutocompleteEnabled\"\n                                  slot=\"address-candidates-slot\"\n                                  :widthFromConfig=\"this.addressInputWidth\"\n          />\n        </address-input>\n      </div>\n\n    </div>\n\n    <!-- before search -->\n    <div v-if=\"shouldShowGreeting\"\n         class=\"topics-container cell medium-cell-block-y\"\n         :style=\"topicsContainerStyle\"\n    >\n      <greeting v-show=\"shouldShowGreeting\"\n                :message=\"greetingText\"\n                :options=\"greetingOptions\"\n      />\n    </div>\n\n    <!-- after search -->\n    <div v-if=\"!shouldShowGreeting\" class=\"topic-panel-content\">\n      <div\n           class=\"topics-container cell medium-cell-block-y\"\n           :style=\"topicsContainerStyle\"\n      >\n        <topic-component-group :topic-components=\"this.$config.components\" />\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\n  import {\n    Topic,\n    TopicComponentGroup,\n    AnyHeader,\n    Greeting,\n    AddressInput,\n    AddressCandidateList,\n    FullScreenTopicsToggleTab,\n  } from '@cityofphiladelphia/phila-vue-comps';\n\n  export default {\n    components: {\n      Greeting,\n      TopicComponentGroup,\n      Topic,\n      AnyHeader,\n      AddressInput,\n      AddressCandidateList,\n      FullScreenTopicsToggleTab,\n    },\n    data() {\n      const data = {\n        defaultAddressTextPlaceholderStyle: {},\n        topicsContainerStyle: {\n          'overflow-y': 'auto',\n          'height': '100px',\n          'min-height': '100px',\n        },\n        addressContainerStyle: {\n          'height': '100%',\n          'align-items': 'flex-start',\n          'padding-left': '20px',\n          'padding-top': '20px',\n          'padding-bottom': '20px',\n        },\n        addressInputContainerStyle: {\n          'height': '100%',\n          'align-items': 'center',\n          'padding-top': '10px',\n          'padding-bottom': '10px',\n        },\n        stacked: false,\n      };\n      return data;\n    },\n    // created() {\n    //   console.log('TopicPanel created, this.$config:', this.$config);\n    //   TopicComponentGroup.components.PropertyCallout = this.$config.customComps.propertyCallout;\n    //   console.log('TopicPanel created, TopicComponentGroup:', TopicComponentGroup);\n    // },\n    mounted() {\n      window.addEventListener('click', this.closeAddressCandidateList);\n      window.addEventListener('resize', this.handleWindowResize);\n      this.handleWindowResize(25);\n    },\n    watch: {\n      geocodeStatus() {\n        this.handleWindowResize();\n      }\n    },\n    computed: {\n      greetingText() {\n        return this.$config.greeting.message;\n      },\n      greetingOptions() {\n        return this.$config.greeting.options;\n      },\n      shouldShowAddressHeader() {\n        if (this.fullScreenTopicsOnly || this.shouldShowGreeting === false) {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      // shouldShowAddressHeaderAdditionalInfo() {\n      //   if (this.addressHeaderAdditionalHeaderOptions.headerType) {\n      //     return 'anyHeader'\n      //   } else if (this.addressHeaderAdditionalHeaderOptions && !this.addressHeaderAdditionalHeaderOptions.headerType) {\n      //     return ''\n      //   }\n      // }\n      addressHeaderAdditionalHeaderOptions() {\n        if (this.$config.addressHeaderAdditionalInfo) {\n          const ahai = this.$config.addressHeaderAdditionalInfo;\n          if (ahai.options) {\n            if (!ahai.options.headerType) {\n              ahai.options.headerType = 'h4';\n            }\n            return ahai.options;\n          }\n        }\n      },\n      addressHeaderAdditionalHeaderSlots() {\n        return {\n          text: this.addressHeaderAdditionalInfo\n        }\n      },\n      addressHeaderAdditionalInfo() {\n        if (this.$config.addressHeaderAdditionalInfo) {\n          const geocode = this.geocode;\n          if (!geocode) return null;\n          const ahai = this.$config.addressHeaderAdditionalInfo;\n          let returned = [];\n          if (ahai.preText) {\n            returned.push(ahai.preText);\n          }\n          returned.push(geocode.properties[ahai.data]);\n          console.log('returned:', returned);\n          return returned.join(' ');\n        }\n      },\n      inputAlign() {\n        if (this.$config.addressInput) {\n          if (this.$config.addressInput.position) {\n            const position = this.$config.addressInput.position;\n            switch(position) {\n              case 'left':\n              return 'flex-start';\n              case 'right':\n              return 'flex-end';\n              case 'center':\n              return 'center';\n            }\n          } else {\n            return 'flex-start';\n          }\n        } else {\n          return 'flex-start';\n        }\n      },\n      addressInputWidth() {\n        if (this.$config.addressInput) {\n          return this.$config.addressInput.width;\n        } else {\n          return 415;\n        }\n      },\n      addressInputPlaceholder() {\n        if (this.$config.addressInput) {\n          return this.$config.addressInput.placeholder;\n        } else {\n          return null\n        }\n      },\n      addressAutocompleteEnabled() {\n        if (this.$config.addressInput) {\n          if (this.$config.addressInput.autocompleteEnabled === true) {\n            return true;\n          } else {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      },\n      fullScreenMapEnabled() {\n        return this.$store.state.fullScreenMapEnabled;\n      },\n      fullScreenTopicsEnabled() {\n        return this.$store.state.fullScreenTopicsEnabled;\n      },\n      fullScreenTopicsOnly() {\n        return this.$store.state.fullScreen.topicsOnly;\n      },\n      topicPanelContainerClass() {\n        if (this.fullScreenTopicsEnabled || this.fullScreenTopicsOnly) {\n          return 'medium-24 small-order-2 medium-order-1';\n        } else if (this.fullScreenMapEnabled) {\n          return 'medium-1 small-order-2 medium-order-1';\n        } else {\n          return 'medium-12 small-order-2 medium-order-1';\n        }\n      },\n      addressContainerClass() {\n        if (this.fullScreenTopicsEnabled || this.fullScreenTopicsOnly) {\n          return 'small-24 medium-12 large-12';\n        } else {\n          return 'small-24';\n        }\n      },\n      geocode() {\n        return this.$store.state.geocode.data;\n      },\n      geocodeStatus() {\n        return this.$store.state.geocode.status;\n      },\n      dorParcels() {\n        return this.$store.state.parcels.dor.data.length > 0;\n      },\n      shouldShowGreeting() {\n        return !(this.geocode || this.dorParcels);\n      },\n      // this returns the address shown in the address header\n      address() {\n        const geocode = this.geocode;\n        const dorParcels = this.$store.state.parcels.dor.data;\n        const activeDorAddress = this.$store.state.parcels.dor.activeAddress;\n        let address;\n        // if (this.$config.defaultAddressTextPlaceholder) {\n        //   address = this.$config.defaultAddressTextPlaceholder.text;\n        // }\n\n        if (geocode) {\n          // TODO make this not ais-specific\n          // REVIEW what's the difference between these two?\n          const addressA = geocode.properties.street_address;\n          const addressB = geocode.street_address;\n\n          address = addressA || addressB;\n\n        // a DOR address might be found even if there is no geocode\n        } else if (activeDorAddress) {\n          address = activeDorAddress;\n        }\n\n        return address;\n      },\n      zipCode() {\n        const geocode = this.geocode;\n        if (!geocode) return null;\n        const zipCode = geocode.properties.zip_code;\n        const zip4 = geocode.properties.zip_4;\n        const parts = [zipCode];\n        if (zip4) parts.push(zip4);\n        return parts.join('-');\n      },\n    },\n    methods: {\n      closeAddressCandidateList() {\n        this.$store.state.shouldShowAddressCandidateList = false;\n      },\n      handleWindowResize(pixelAdjustment) {\n        // this is called to run when:\n        // 1 - TopicPanel.vue mounted\n        // 2 - geocodeStatus change\n        // 3 - any resizing of the window\n\n        // const windowHeight = $(window).height();\n        const windowHeight = window.innerHeight;\n        // const siteHeaderHeightNum = parseInt(window.getComputedStyle(document.getElementsByClassName('site-header')[0]).getPropertyValue('height').replace('px', ''));\n        const siteHeaderHeightNum = parseInt(document.getElementsByClassName('site-header')[0].getBoundingClientRect().height);\n        // const appFooterHeightNum = parseInt(window.getComputedStyle(document.getElementsByClassName('app-footer')[0]).getPropertyValue('height').replace('px', ''));\n        const appFooterHeightNum = parseInt(document.getElementsByClassName('app-footer')[0].getBoundingClientRect().height);\n        let topicsHeight;\n\n        if (this.shouldShowAddressHeader) {\n          if (document.getElementsByClassName('address-header')[0]) {\n            // const addressHeaderHeightNum = parseInt(window.getComputedStyle(document.getElementsByClassName('address-header')[0]).getPropertyValue('height').replace('px', ''));\n            const addressHeaderHeightNum = parseInt(document.getElementsByClassName('address-header')[0].getBoundingClientRect().height);\n            topicsHeight = windowHeight - siteHeaderHeightNum - appFooterHeightNum - addressHeaderHeightNum;\n            // console.log('handleWindowResize shouldShowAddressHeader and it was found, window-height:', windowHeight, 'SiteHeaderHeight:', siteHeaderHeightNum, 'addressHeaderHeight:', addressHeaderHeightNum, 'appFooterHeight:', appFooterHeightNum, 'topicsHeight:', topicsHeight);\n            if (typeof pixelAdjustment === 'number') {\n              // console.log('handleWindowResize if pixelAdjustment is true, window-height:', windowHeight, 'SiteHeaderHeight:', siteHeaderHeightNum, 'addressHeaderHeight:', addressHeaderHeightNum, 'appFooterHeight:', appFooterHeightNum, 'topicsHeight:', topicsHeight, 'pixelAdjustment:', pixelAdjustment);\n              topicsHeight = topicsHeight - pixelAdjustment;\n            }\n          } else {\n            topicsHeight = windowHeight - siteHeaderHeightNum - appFooterHeightNum - 103;\n            // console.log('handleWindowResize shouldShowAddressHeader but it was not found so it is using the hardcoded 103, window-height:', windowHeight, 'SiteHeaderHeight:', siteHeaderHeightNum, 'appFooterHeight:', appFooterHeightNum, 'topicsHeight:', topicsHeight);\n          }\n        } else {\n          topicsHeight = windowHeight - siteHeaderHeightNum - appFooterHeightNum;\n          // console.log('handleWindowResize shouldShowAddressHeader is NOT true, window-height:', windowHeight, 'SiteHeaderHeight:', siteHeaderHeightNum, 'appFooterHeight:', appFooterHeightNum, 'topicsHeight:', topicsHeight);\n        }\n\n        // if ($(window).width() >= 750) {\n        if (window.innerWidth >= 750) {\n          this.stacked = false;\n          if (this.$config.defaultAddressTextPlaceholder) {\n            this.defaultAddressTextPlaceholderStyle = this.$config.defaultAddressTextPlaceholder.wideStyle;\n          }\n          this.addressContainerStyle = {\n            'height': '100%',\n            'align-items': 'flex-start',\n            'padding-left': '20px',\n            'padding-top': '20px',\n            'padding-bottom': '20px',\n          }\n          this.addressInputContainerStyle = {\n            'height': '100%',\n            'align-items': this.inputAlign,\n            'padding-top': '30px',\n            'padding-bottom': '30px',\n          }\n          this.topicsContainerStyle.height = topicsHeight.toString() + 'px';\n          this.topicsContainerStyle['min-height'] = topicsHeight.toString() + 'px';\n          this.topicsContainerStyle['overflow-y'] = 'auto';\n\n        } else {\n          this.stacked = true;\n          if (this.$config.defaultAddressTextPlaceholder) {\n            this.defaultAddressTextPlaceholderStyle = this.$config.defaultAddressTextPlaceholder.narrowStyle;\n          }\n          this.addressContainerStyle = {\n            'height': 'auto',\n            'align-items': 'center',\n            'padding-left': '0px',\n            'padding-top': '10px',\n            'padding-bottom': '10px',\n          }\n          this.addressInputContainerStyle = {\n            'height': 'auto',\n            'align-items': 'center',\n            'padding-top': '10px',\n            'padding-bottom': '10px',\n          }\n          this.topicsContainerStyle.height = 'auto';\n          this.topicsContainerStyle['min-height'] = topicsHeight.toString() + 'px';\n          this.topicsContainerStyle['overflow-y'] = 'hidden';\n        }\n      }\n    }\n  };\n</script>\n\n<style scoped>\n  /*don't highlight any form elements*/\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n    outline: none;\n  }\n\n  /* standards applies padding to buttons, which causes some weirdness with\n  buttons on the map panel. override here. */\n  button {\n    padding: inherit;\n  }\n\n  .mb-panel-topics {\n    position: relative;\n  }\n\n  .address-header {\n    background: #daedfe;\n    color: #0f4d90;\n\n    /*this keeps the box shadow over the scrollable part of the panel*/\n    position: relative;\n    z-index: 1;\n\n    -webkit-box-shadow: 0px 5px 7px -2px rgba(0,0,0,0.18);\n    -moz-box-shadow: 0px 5px 7px -2px rgba(0,0,0,0.18);\n    box-shadow: 0px 5px 7px -2px rgba(0,0,0,0.18);\n    margin-bottom: -5px !important;\n    display: inline-block;\n  }\n\n  .address-header-line-1 {\n    margin-bottom: 0;\n    margin-top: 0;\n    padding-top: 0px !important;\n    padding-bottom: 0px !important;\n    padding-right: 8px !important;\n    padding-left: 8px !important;\n  }\n\n  .address-header-line-2 {\n    padding: 0px;\n  }\n\n  .address-header-line-3 {\n    padding: 0px;\n  }\n\n  .address-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  .address-input-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  .topics-container {\n    padding: 26px;\n    position: relative;\n    overflow-x: hidden;\n  }\n\n  .default-address-text {\n    font-size: 30px;\n    line-height: 26px;\n    font-family: 'Montserrat', 'Tahoma', sans-serif;\n    padding-top: 0px !important;\n    padding-bottom: 0px !important;\n    padding-right: 8px !important;\n    padding-left: 8px !important;\n  }\n\n</style>\n","export default {\n  watch: {\n    activeFeature(nextActiveFeature, prevActiveFeature) {\n      // console.log('WATCH active feature', prevActiveFeature, '=>', nextActiveFeature);\n\n      const layerMap = this.$store.state.map.map._layers;\n      const layers = Object.values(layerMap);\n\n      let updateFeaturePrev,\n          updateFeatureNext,\n          tableId,\n          featureIdPrev,\n          featureIdNext,\n          matchingLayerNext,\n          matchingLayerPrev;\n\n      if (prevActiveFeature && prevActiveFeature.tableId && prevActiveFeature.featureId) {\n        updateFeaturePrev = prevActiveFeature;\n        tableId = updateFeaturePrev.tableId\n        featureIdPrev = updateFeaturePrev.featureId;\n        matchingLayerPrev = layers.filter(layer => {\n          const options = layer.options || {};\n          const data = options.data;\n          if (!data) return;\n          const layerFeatureId = data.featureId;\n          const layerTableId = data.tableId;\n          return layerFeatureId === featureIdPrev && layerTableId === tableId;\n        })[0];\n        this.updateMarkerFillColor(matchingLayerPrev);\n      }\n\n      if (nextActiveFeature && nextActiveFeature.tableId && nextActiveFeature.featureId) {\n        updateFeatureNext = nextActiveFeature;\n        tableId = updateFeatureNext.tableId\n        featureIdNext = updateFeatureNext.featureId;\n        matchingLayerNext = layers.filter(layer => {\n          const options = layer.options || {};\n          const data = options.data;\n          if (!data) return;\n          const layerFeatureId = data.featureId;\n          const layerTableId = data.tableId;\n          return layerFeatureId === featureIdNext && layerTableId === tableId;\n        })[0];\n        this.updateMarkerFillColor(matchingLayerNext);\n        this.bringMarkerToFront(matchingLayerNext);\n      }\n\n    },\n  },\n  computed: {\n    locationMarker() {\n      const latlngArray = [this.$store.state.map.location.lat, this.$store.state.map.location.lng]\n      const marker = {\n        latlng: latlngArray,\n        radius: 6,\n        fillColor: '#ff3f3f',\n        color: '#ff0000',\n        weight: 1,\n        opacity: 1,\n        fillOpacity: 1.0\n      }\n      return marker;\n    },\n\n    // returns map markers as simple object with a geometry property, key,\n    // and optional properties for symbology\n    markersForAddress() {\n      // console.log('markers-mixin.js markersForAddress computed is running');\n      const markers = [];\n      // geocoded address marker\n      const geocodeGeom = this.geocodeGeom;\n      if (this.identifyFeature === 'address-marker' && geocodeGeom) {\n        const latlng = [...geocodeGeom.coordinates].reverse();\n        const key = this.geocodeResult.properties.street_address;\n        const color = '#2176d2';\n        const markerType = 'geocode';\n        const icon = {\n          prefix: 'fas',\n          icon: 'map-marker-alt',\n          shadow: true,\n          size: 50,\n        }\n        const addressMarker = {latlng, key, color, markerType, icon};\n        markers.push(addressMarker);\n      }\n      return markers;\n    },\n\n    markersForTopic() {\n      // console.log('markers-mixin.js markersForTopic computed is running');\n      const markers = [];\n\n      // marker for topic from config\n      const topicMarkers = this.activeTopicConfig.markersForTopic;\n      if (topicMarkers) {\n        const state = this.$store.state;\n        const topicData = topicMarkers.data(state);\n        if (topicData !== null) {\n          // if (Array.isArray(topicData)) {\n          //   for (let marker of topicData) {\n          //     console.log('topicData marker:', marker);\n          //     // }\n          //     // if (path !== null && path !== undefined) {\n          //     const latlng = [marker.lat, marker.lng];\n          //     const key = marker.key;\n          //     const color = marker.color || 'green';\n          //     const markerType = 'overlay';\n          //     const icon = marker.icon;\n          //     const markerObject = {latlng, key, color, markerType, icon};\n          //     markers.push(markerObject);\n          //   }\n          // } else {\n            const latlng = [topicData[topicMarkers.lat], topicData[topicMarkers.lng]];\n            const key = topicData[topicMarkers.key];\n            const color = topicMarkers.color || 'green';\n            const markerType = 'overlay';\n            const icon = topicMarkers.icon;\n            const markerObject = {latlng, key, color, markerType, icon};\n            markers.push(markerObject);\n          // }\n        }\n      }\n      return markers;\n    },\n\n    circleMarkers() {\n      const filteredData = this.$store.state.horizontalTables.filteredData;\n      // const filteredData = this.filteredData;\n      let circleMarkers = [];\n\n      // get visible tables based on active topic\n      const tableIds = this.$store.getters.visibleTableIds;\n\n      // console.log('computed circleMarkers is rerunning, filteredData:', filteredData, 'tableIds:', tableIds);\n\n      for (let tableId of tableIds) {\n        const tableConfig = this.getConfigForTable(tableId) || {};\n        // console.log('tableId:', tableId, 'tableConfig:', tableConfig);\n        const mapOverlay = (tableConfig.options || {}).mapOverlay;\n\n        if (!mapOverlay || mapOverlay.marker !== 'circle') {\n          continue;\n        }\n\n        const items = filteredData[tableId];\n\n        if (items.length < 1) {\n          continue;\n        }\n\n        const style = mapOverlay.style;\n\n        // go through rows\n        for (let item of items) {\n          // console.log('tableId', tableId)\n          let latlng;\n\n          // TODO - get geometry field name from config\n          if (item.geometry) {\n            const [x, y] = item.geometry.coordinates;\n            latlng = [y, x];\n          } else if (item.lat) {\n            latlng = [item.lat, item.lng]\n            // if (item.point_x) {\n            //   latlng = [item.point_y, item.point_x];\n            // } else if (item.geocode_x) {\n            //   latlng = [item.geocode_y, item.geocode_x];\n            // }\n          }\n\n          // check for active feature TODO - bind style props to state\n          let props = Object.assign({}, style);\n          props.latlng = latlng;\n          props.featureId = item._featureId;\n          props.tableId = tableId;\n          circleMarkers.push(props);\n        }\n      }\n\n      return circleMarkers;\n    },\n\n    // returns geojson parcels to be rendered on the map along with\n    // necessary props.\n    geojsonParcels() {\n      // console.log('markers-mixin.js geojsonParcels computed is running');\n      const features = [];\n\n      const identifyFeature = this.identifyFeature;\n      const activeParcelLayer = this.activeParcelLayer;\n\n      // TODO - get pwd parcel and dor parcel into the config file\n      // pwd parcel\n      if (identifyFeature === 'pwd-parcel' && activeParcelLayer === 'pwd' && this.pwdParcel) {\n        let props = {};\n        props.geojson = this.pwdParcel;\n        props.color = 'blue';\n        props.fillColor = 'blue';\n        props.weight = 2;\n        props.opacity = 1;\n        props.fillOpacity = 0.3;\n        props.key = props.geojson.properties.PARCELID;\n        features.push(props);\n\n      // dor parcel\n      } else if (identifyFeature === 'dor-parcel' && activeParcelLayer === 'dor') {\n        const color = 'blue';\n        const dorParcelFeatures = this.dorParcels.map(dorParcel => {\n          let props = {};\n          props.geojson = dorParcel;\n          props.color = 'blue';\n          props.fillColor = 'blue';\n          props.weight = 2;\n          props.opacity = 1;\n          props.fillOpacity = 0.3;\n          props.key = dorParcel.properties.OBJECTID;\n          return props;\n        });\n        features.push.apply(features, dorParcelFeatures);\n      }\n      return features;\n    },\n\n    // returns other geojson from config\n    geojsonForTopic() {\n      const features = [];\n      const topicGeojson = this.activeTopicConfig.geojsonForTopic;\n      if (topicGeojson) {\n        const state = this.$store.state;\n        const topicData = topicGeojson.data(state);\n        if (topicData !== null) {\n          for (let geojson of topicData) {\n            let props = Object.assign({}, topicGeojson.style);\n            props.key = geojson[topicGeojson.key];\n            props.geojson = geojson\n            features.push(props);\n          }\n        }\n      }\n      return features;\n    },\n\n    // these geojson features will have mouseover and mouseout events,\n    // for highlighting horizontal table rows\n    reactiveGeojsonFeatures() {\n      const features = [];\n\n      const filteredData = this.$store.state.horizontalTables.filteredData;\n      // get visible tables based on active topic\n      const tableIds = this.$store.getters.visibleTableIds;\n\n      for (let tableId of tableIds) {\n        const tableConfig = this.getConfigForTable(tableId) || {};\n        const mapOverlay = (tableConfig.options || {}).mapOverlay;\n\n        if (!mapOverlay || mapOverlay.marker !== 'geojson') {\n          continue;\n        }\n\n        const items = filteredData[tableId];\n\n        if (items.length < 1) {\n          continue;\n        }\n\n        const style = mapOverlay.style;\n        items.push(tableId);\n\n        // go through rows\n        for (let item of items) {\n          let props = Object.assign({}, style);\n\n          props.geojson = item.geometry;\n          props.key = item.id;\n          props.featureId = item._featureId || null;\n          props.tableId = items[items.length-1];\n          features.push(props);\n        }\n      }\n      return features;\n    },\n\n    leafletMarkers() {\n      const markers = [];\n\n      markers.push.apply(markers, this.markers);\n      markers.push.apply(markers, this.geojsonParcels);\n\n      return markers;\n    },\n  },\n  methods: {\n    getTableFromComps(comps, tableId) {\n      const matchingComps = comps.filter(comp => {\n        return (\n          comp.type === 'horizontal-table' &&\n          comp._id == tableId\n        );\n      }) || [];\n      return matchingComps[0];\n    },\n    getConfigForTable(tableId) {\n      const topics = this.$config.topics || [];\n\n      for (let topic of topics) {\n        const comps = topic.components || [];\n\n        // try outer comps\n        const table = this.getTableFromComps(comps, tableId);\n\n        if (table) return table;\n\n        // try inner comps\n        for (let comp of comps) {\n          const options = comp.options || {};\n\n          const innerComps = options.components || options.tables || [];\n\n          if (innerComps.length > 0) {\n            const innerTable = this.getTableFromComps(innerComps, tableId);\n            // console.log('table on 2nd try', innerTable, innerComps);\n\n            if (innerTable) return innerTable;\n          }\n        }\n      }\n    },\n    bringMarkerToFront(circleMarker) {\n      // put marker on top\n      const el = circleMarker._path;\n\n      // remove from parent\n      const group = circleMarker._renderer._rootGroup;\n      group.removeChild(el);\n\n      // append to end (which brings it to the front)\n      group.appendChild(el);\n    },\n    handleMarkerMouseover(e) {\n      // console.log('handleMarkerMouseover is starting');\n      if (!this.isMobileOrTablet) {\n        // console.log('handleMarkerMouseover actions are running');\n        const { target } = e;\n        const { featureId, tableId } = target.options.data;\n        // console.log('target:', target, 'featureId:', featureId, 'tableId:', tableId);\n        this.$store.commit('setActiveFeature', { featureId, tableId });\n      }\n    },\n    handleMarkerClick(e) {\n      // console.log('handleMarkerClick is starting');\n      if (this.isMobileOrTablet) {\n        // console.log('handleMarkerClick actions are running');\n        const { target } = e;\n        const { featureId, tableId } = target.options.data;\n        // console.log('target:', target, 'featureId:', featureId, 'tableId:', tableId);\n        this.$store.commit('setActiveFeature', { featureId, tableId });\n      }\n    },\n    handleMarkerMouseout(e) {\n      // console.log('handleMarkerMouseout is starting');\n      // if (!this.isMobileOrTablet) {\n        // console.log('handleMarkerMouseout actions are running');\n        const { target } = e;\n        this.$store.commit('setActiveFeature', null);\n      // }\n    },\n    updateMarkerFillColor(marker) {\n      // console.log('updateMarkerFillColor, marker:', marker);\n      // get next fill color\n      const { featureId, tableId } = marker.options.data;\n      const nextFillColor = this.fillColorForCircleMarker(featureId, tableId);\n\n      // highlight. we're doing this here (non-reactively) because binding the\n      // fill color property was not performing well enough.\n      const nextStyle = Object.assign({}, marker.options);\n      nextStyle.fillColor = nextFillColor;\n      marker.setStyle(nextStyle);\n    },\n  }\n};\n","<template>\n  <div id=\"map-panel-container\"\n       :class=\"this.mapPanelContainerClass\"\n  >\n    <full-screen-map-toggle-tab v-once />\n    <map_ :class=\"{ 'mb-map-with-widget': this.$store.state.cyclomedia.active || this.$store.state.pictometry.active }\"\n          id=\"map-tag\"\n          :center=\"this.$store.state.map.center\"\n          :zoom=\"this.$store.state.map.zoom\"\n          @l-click=\"handleMapClick\"\n          @l-moveend=\"handleMapMove\"\n          zoom-control-position=\"bottomright\"\n          :min-zoom=\"this.$config.map.minZoom\"\n          :max-zoom=\"this.$config.map.maxZoom\"\n    >\n    <!-- :class=\"{ 'mb-map-with-widget': this.$store.state.cyclomedia.active || this.$store.state.pictometry.active }\" -->\n      <!-- loading mask -->\n      <div v-show=\"isGeocoding\" class=\"mb-map-loading-mask\">\n        <div class=\"mb-map-loading-mask-inner\">\n          <i class=\"fa fa-spinner fa-4x spin\"></i>\n          <h1>Finding address...</h1>\n        </div>\n      </div>\n\n      <!-- basemaps -->\n      <esri-tiled-map-layer v-for=\"(basemap, key) in this.$config.map.basemaps\"\n                            v-if=\"activeBasemap === key\"\n                            :key=\"key\"\n                            :url=\"basemap.url\"\n                            :max-zoom=\"basemap.maxZoom\"\n                            :attribution=\"basemap.attribution\"\n      />\n\n      <!-- basemap labels and parcels outlines -->\n      <esri-tiled-map-layer v-for=\"(tiledLayer, key) in this.$config.map.tiledLayers\"\n                            v-if=\"tiledLayers.includes(key)\"\n                            :key=\"key\"\n                            :url=\"tiledLayer.url\"\n                            :zIndex=\"tiledLayer.zIndex\"\n                            :attribution=\"tiledLayer.attribution\"\n      />\n\n      <esri-tiled-overlay v-for=\"(tiledLayer, key) in this.$config.map.tiledOverlays\"\n                          v-if=\"activeTiledOverlays.includes(key)\"\n                          :key=\"key\"\n                          :url=\"tiledLayer.url\"\n                          :zIndex=\"tiledLayer.zIndex\"\n                          :opacity=\"tiledLayer.opacity\"\n      />\n\n      <esri-dynamic-map-layer v-for=\"(dynamicLayer, key) in this.$config.map.dynamicMapLayers\"\n                              v-if=\"activeDynamicMaps.includes(key)\"\n                              :key=\"key\"\n                              :url=\"dynamicLayer.url\"\n                              :attribution=\"dynamicLayer.attribution\"\n                              :transparent=\"true\"\n                              :opacity=\"dynamicLayer.opacity\"\n      />\n\n      <!-- dorParcels, pwdParcels, vacantLand, vacantBuilding -->\n      <esri-feature-layer v-for=\"(featureLayer, key) in this.$config.map.featureLayers\"\n                          v-if=\"shouldShowFeatureLayer(key, featureLayer.minZoom)\"\n                          :key=\"key\"\n                          :layerName=\"key\"\n                          :url=\"featureLayer.url\"\n                          :color=\"featureLayer.color\"\n                          :fillColor=\"featureLayer.color\"\n                          :fillOpacity=\"featureLayer.fillOpacity\"\n                          :weight=\"featureLayer.weight\"\n                          :style_=\"featureLayer.style\"\n                          :minZoom=\"featureLayer.minZoom\"\n                          :maxZoom=\"featureLayer.maxZoom\"\n                          :zIndex=\"featureLayer.zIndex\"\n                          :markerType=\"featureLayer.markerType\"\n                          :radius=\"featureLayer.radius\"\n                          :interactive=\"featureLayer.interactive\"\n      />\n\n      <!-- regmaps -->\n      <esri-dynamic-map-layer v-for=\"(item, key) in this.imageOverlayItems\"\n                              v-if=\"shouldShowImageOverlay(item.properties.RECMAP)\"\n                              :key=\"key\"\n                              :url=\"'//gis.phila.gov/arcgis/rest/services/Atlas/RegMaps/MapServer'\"\n                              :layers=\"[0]\"\n                              :layerDefs=\"'0:NAME=\\'g' + item.properties.RECMAP.toLowerCase() + '.tif\\''\"\n                              :transparent=\"true\"\n                              :opacity=\"0.5\"\n      />\n      <!-- :url=\"'//gis.phila.gov/arcgis/rest/services/DOR_ParcelExplorer/rtt_basemap/MapServer/'\" -->\n      <!-- :url=\"this.imageOverlayInfo.url\"\n      :opacity=\"this.imageOverlayInfo.opacity\" -->\n\n      <!-- address marker -->\n      <!-- REVIEW why does this need a key? it's not a list... -->\n      <!-- <vector-marker v-if=\"identifyFeature === 'address-marker' && geocodeGeom\"\n                    :latlng=\"[...geocodeGeom.coordinates].reverse()\"\n                    :key=\"streetAddress\"\n      /> -->\n\n      <!-- NEW METHOD: try rendering markers generically based on marker type -->\n      <!-- vector markers -->\n      <vector-marker v-for=\"(marker, index) in markersForAddress\"\n                     :latlng=\"marker.latlng\"\n                     :key=\"marker.key\"\n                     :markerColor=\"marker.color\"\n                     :icon=\"marker.icon\"\n      />\n\n      <!-- vector markers -->\n      <vector-marker v-for=\"(marker, index) in markersForTopic\"\n                     :latlng=\"marker.latlng\"\n                     :key=\"marker.key\"\n                     :markerColor=\"marker.color\"\n                     :icon=\"marker.icon\"\n      />\n\n      <!-- marker using a png and ablility to rotate it -->\n      <png-marker v-if=\"this.cyclomediaActive\"\n                  :icon=\"'images/camera.png'\"\n                  :latlng=\"cycloLatlng\"\n                  :rotationAngle=\"cycloRotationAngle\"\n      />\n\n      <!-- marker using custom code extending icons - https://github.com/iatkin/leaflet-svgicon -->\n      <svg-view-cone-marker v-if=\"this.cyclomediaActive\"\n                            :latlng=\"cycloLatlng\"\n                            :rotationAngle=\"cycloRotationAngle\"\n                            :hFov=\"cycloHFov\"\n      />\n\n\n      <!-- non-reactive geojson parcels -->\n      <geojson v-for=\"geojsonFeature in geojsonParcels\"\n               v-if=\"shouldShowGeojson(geojsonFeature.key)\"\n               :geojson=\"geojsonFeature.geojson\"\n               :fillColor=\"geojsonFeature.fillColor\"\n               :color=\"geojsonFeature.color\"\n               :weight=\"geojsonFeature.weight\"\n               :opacity=\"geojsonFeature.opacity\"\n               :fillOpacity=\"geojsonFeature.fillOpacity\"\n               :key=\"geojsonFeature.key\"\n               :data=\"{\n                 featureId: geojsonFeature.featureId,\n                 tableId: geojsonFeature.tableId\n               }\"\n       />\n\n      <!-- non-reactive geojson features for topics -->\n      <geojson v-for=\"geojsonFeature in geojsonForTopic\"\n               v-if=\"shouldShowGeojson(geojsonFeature.key)\"\n               :geojson=\"geojsonFeature.geojson\"\n               :fillColor=\"geojsonFeature.fillColor\"\n               :color=\"geojsonFeature.color\"\n               :weight=\"geojsonFeature.weight\"\n               :opacity=\"geojsonFeature.opacity\"\n               :fillOpacity=\"geojsonFeature.fillOpacity\"\n               :key=\"geojsonFeature.key\"\n               :data=\"{\n                 featureId: geojsonFeature.featureId,\n                 tableId: geojsonFeature.tableId\n               }\"\n       />\n\n       <!-- reactive geojson features -->\n       <geojson v-for=\"geojsonFeature in reactiveGeojsonFeatures\"\n                v-if=\"shouldShowGeojson(geojsonFeature.key)\"\n                @l-mouseover=\"handleMarkerMouseover\"\n                @l-click=\"handleMarkerClick\"\n                @l-mouseout=\"handleMarkerMouseout\"\n                :geojson=\"geojsonFeature.geojson\"\n                :fillColor=\"geojsonFeature.fillColor\"\n                :color=\"geojsonFeature.color\"\n                :weight=\"geojsonFeature.weight\"\n                :opacity=\"geojsonFeature.opacity\"\n                :fillOpacity=\"geojsonFeature.fillOpacity\"\n                :key=\"geojsonFeature.key\"\n                :data=\"{\n                  featureId: geojsonFeature.featureId,\n                  tableId: geojsonFeature.tableId\n                }\"\n        />\n\n       <!-- location marker -->\n       <circle-marker v-if=\"this.$store.state.map.location.lat != null\"\n                      :latlng=\"this.locationMarker.latlng\"\n                      :radius=\"this.locationMarker.radius\"\n                      :fillColor=\"this.locationMarker.fillColor\"\n                      :color=\"this.locationMarker.color\"\n                      :weight=\"this.locationMarker.weight\"\n                      :opacity=\"this.locationMarker.opacity\"\n                      :fillOpacity=\"this.locationMarker.fillOpacity\"\n                      :key=\"Math.random()\"\n       />\n\n       <!-- TODO give these a real key -->\n      <circle-marker v-for=\"circleMarker in circleMarkers\"\n                     @l-mouseover=\"handleMarkerMouseover\"\n                     @l-click=\"handleMarkerClick\"\n                     @l-mouseout=\"handleMarkerMouseout\"\n                     :latlng=\"circleMarker.latlng\"\n                     :radius=\"circleMarker.radius\"\n                     :fillColor=\"circleMarker.fillColor\"\n                   \t :color=\"circleMarker.color\"\n                   \t :weight=\"circleMarker.weight\"\n                   \t :opacity=\"circleMarker.opacity\"\n                   \t :fillOpacity=\"circleMarker.fillOpacity\"\n                     :key=\"Math.random()\"\n                     :data=\"{\n                       featureId: circleMarker.featureId,\n                       tableId: circleMarker.tableId\n                     }\"\n      />\n\n       <!-- <vector-marker v-for=\"marker in threeOneOneMarkers\"\n                      v-if=\"activeTopicConfig.key === 'threeOneOne'\"\n                      :latlng=\"[marker.geometry.coordinates[1], marker.geometry.coordinates[0]]\"\n                      :key=\"marker.id\"\n                      :markerColor=\"'#b2ffb2'\"\n       /> -->\n\n      <!-- CONTROLS: -->\n      <!-- basemap control -->\n      <control-corner :vSide=\"'top'\"\n                      :hSide=\"'almostright'\"\n      >\n      </control-corner>\n\n      <control-corner :vSide=\"'top'\"\n                      :hSide=\"'almostleft'\"\n      >\n      </control-corner>\n\n      <!-- <basemap-tooltip :position=\"'topright'\"\n      /> -->\n\n      <div v-once>\n        <basemap-toggle-control v-if=\"shouldShowImageryToggle\"\n                                v-once\n                                :position=\"'topright'\"\n        />\n      </div>\n\n      <div v-once>\n        <basemap-select-control :position=\"this.basemapSelectControlPosition\" />\n      </div>\n\n      <div v-once>\n        <pictometry-button v-if=\"this.shouldShowPictometryButton\"\n                           v-once\n                           :position=\"'topright'\"\n                           :link=\"'pictometry'\"\n                           :imgSrc=\"'images/pictometry.png'\"\n        />\n      </div>\n\n      <div v-once>\n        <cyclomedia-button v-if=\"this.shouldShowCyclomediaButton\"\n                           v-once\n                           :position=\"'topright'\"\n                           :link=\"'cyclomedia'\"\n                           :imgSrc=\"'images/cyclomedia.png'\"\n                           @click=\"handleCyclomediaButtonClick\"\n        />\n      </div>\n\n      <div v-once\n           v-if=\"this.measureControlEnabled\"\n      >\n        <measure-control :position=\"'bottomleft'\" />\n      </div>\n\n      <div v-once>\n        <legend-control v-for=\"legendControl in Object.keys(legendControls)\"\n                        :key=\"legendControl\"\n                        :position=\"'bottomleft'\"\n                        :options=\"legendControls[legendControl].options\"\n                        :items=\"legendControls[legendControl].data\"\n        />\n      </div>\n\n      <div v-once>\n        <location-control v-once\n                          v-if=\"this.geolocationEnabled\"\n                          :position=\"'bottomright'\"\n        />\n      </div>\n\n      <!-- <basemap-tooltip :position=\"'bottomalmostleft'\"\n      /> -->\n\n      <!-- <scale-control :vSide=\"'top'\"\n                     :hSide=\"'almostright'\"\n      >\n      </scale-control> -->\n\n      <div v-once>\n        <map-address-input :position=\"this.addressInputPosition\"\n                       :placeholder=\"this.addressInputPlaceholder\"\n                       :widthFromConfig=\"this.addressInputWidth\"\n        >\n        </map-address-input>\n      </div>\n      <map-address-candidate-list v-if=\"this.addressAutocompleteEnabled\"\n                              :position=\"this.addressInputPosition\"\n                              :widthFromConfig=\"this.addressInputWidth\"\n      />\n\n\n      <cyclomedia-recording-circle v-for=\"recording in cyclomediaRecordings\"\n                                   v-if=\"cyclomediaActive\"\n                                   :key=\"recording.imageId\"\n                                   :imageId=\"recording.imageId\"\n                                   :latlng=\"[recording.lat, recording.lng]\"\n                                   :size=\"1.2\"\n                                   :color=\"'#3388ff'\"\n                                   :weight=\"1\"\n                                   @l-click=\"handleCyclomediaRecordingClick\"\n      />\n    </map_>\n    <slot class='widget-slot' name=\"cycloWidget\" />\n    <slot class='widget-slot' name=\"pictWidget\" />\n  </div>\n</template>\n\n<script>\n  import { geoJSON, featureGroup } from 'leaflet';\n  import { marker as Lmarker } from 'leaflet';\n\n  // mixins\n  import markersMixin from './markers-mixin';\n  import {\n    cyclomediaMixin,\n    pictometryMixin,\n    Map_,\n    Control,\n    MapAddressInput,\n    MapAddressCandidateList,\n    EsriTiledMapLayer,\n    EsriTiledOverlay,\n    EsriDynamicMapLayer,\n    EsriFeatureLayer,\n    Geojson,\n    CircleMarker,\n    // OpacitySlider,\n    VectorMarker,\n    PngMarker,\n    BasemapToggleControl,\n    BasemapSelectControl,\n    FullScreenMapToggleTab,\n    LocationControl,\n    CyclomediaButton,\n    PictometryButton,\n    CyclomediaRecordingCircle,\n    CyclomediaRecordingsClient,\n    SvgViewConeMarker,\n    MeasureControl,\n    LegendControl,\n    BasemapTooltip,\n    ControlCorner,\n    EsriWebMap,\n    EsriWebMapLayer,\n    PopUp,\n    PopUpContent,\n    Polygon_,\n    Polyline_,\n    ModalAbout\n  } from '@cityofphiladelphia/phila-vue-mapping';\n\n  export default {\n    name: 'MapPanel',\n    mixins: [\n      markersMixin,\n      cyclomediaMixin,\n      pictometryMixin,\n    ],\n    components: {\n      Map_,\n      Control,\n      MapAddressInput,\n      MapAddressCandidateList,\n      EsriTiledMapLayer,\n      EsriTiledOverlay,\n      EsriDynamicMapLayer,\n      EsriFeatureLayer,\n      Geojson,\n      CircleMarker,\n      // OpacitySlider,\n      VectorMarker,\n      PngMarker,\n      BasemapToggleControl,\n      BasemapSelectControl,\n      FullScreenMapToggleTab,\n      LocationControl,\n      PictometryButton,\n      CyclomediaButton,\n      CyclomediaRecordingCircle,\n      SvgViewConeMarker,\n      MeasureControl,\n      LegendControl,\n      BasemapTooltip,\n      ControlCorner,\n    },\n    // data: {\n    data() {\n      const data = {\n        zoomToShape: {\n          geojsonParcels: [],\n          geojsonForTopic: [],\n          markersForAddress: [],\n          markersForTopic: [],\n        },\n      };\n      return data;\n    },\n    created() {\n      // if there's a default address, navigate to it\n      const defaultAddress = this.$config.defaultAddress;\n      if (defaultAddress) {\n        this.$controller.goToDefaultAddress(defaultAddress);\n      }\n\n      const cyclomediaConfig = this.$config.cyclomedia || {};\n      if (cyclomediaConfig.enabled) {\n      // create cyclomedia recordings client\n        this.$cyclomediaRecordingsClient = new CyclomediaRecordingsClient(\n          this.$config.cyclomedia.recordingsUrl,\n          this.$config.cyclomedia.username,\n          this.$config.cyclomedia.password,\n          4326\n        );\n      }\n    },\n    computed: {\n      // shouldShowAddressInput() {\n      //   if (this.$config.addressInputLocation == 'map') {\n      //     return true;\n      //   } else {\n      //     return false;\n      //   }\n      // },\n      addressAutocompleteEnabled() {\n        // TODO tidy up the code\n        if (this.$config.addressInput) {\n          if (this.$config.addressInput.autocompleteEnabled === true) {\n            return true;\n          } else {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      },\n      addressInputPosition() {\n        if (this.isMobileOrTablet) {\n          return 'topleft'\n        } else {\n          return 'topalmostleft'\n        }\n      },\n      addressInputWidth() {\n        if (this.$config.addressInput) {\n          return this.$config.addressInput.mapWidth;\n        } else {\n          return 415;\n        }\n      },\n      addressInputPlaceholder() {\n        if (this.$config.addressInput) {\n          return this.$config.addressInput.placeholder;\n        } else {\n          return null\n        }\n      },\n      basemapSelectControlPosition() {\n        if (this.isMobileOrTablet) {\n          return 'topright'\n        } else {\n          return 'topalmostright'\n        }\n      },\n      shouldShowAddressCandidateList() {\n        return this.$store.state.shouldShowAddressCandidateList;\n      },\n      measureControlEnabled() {\n        if (this.$config.measureControlEnabled === false) {\n          return false;\n        } else {\n          return true;\n        }\n      },\n      fullScreenMapEnabled() {\n        return this.$store.state.fullScreenMapEnabled;\n      },\n      fullScreenTopicsEnabled() {\n        return this.$store.state.fullScreenTopicsEnabled;\n      },\n      mapPanelContainerClass() {\n        // return 'medium-12 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map'\n        if (this.fullScreenMapEnabled) {\n          return 'medium-24 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map'\n        } else if (this.fullScreenMapOnly) {\n          return 'medium-1 small-order-1 small-1 medium-order-2 mb-panel mb-panel-map'\n        } else if (this.fullScreenTopicsEnabled) {\n          return 'medium-1 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map'\n        } else {\n          return 'medium-12 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map'\n        }\n      },\n      cycloLatlng() {\n        if (this.$store.state.cyclomedia.orientation.xyz !== null) {\n          const xyz = this.$store.state.cyclomedia.orientation.xyz;\n          return [xyz[1], xyz[0]];\n        } else {\n          const center = this.$config.map.center;\n          return center;\n        }\n      },\n      cycloRotationAngle() {\n        return this.$store.state.cyclomedia.orientation.yaw * (180/3.14159265359);\n      },\n      cycloHFov() {\n        return this.$store.state.cyclomedia.orientation.hFov;\n      },\n      isMobileOrTablet() {\n        return this.$store.state.isMobileOrTablet;\n      },\n      shouldShowCyclomediaButton() {\n        return this.$config.cyclomedia.enabled && !this.isMobileOrTablet;\n      },\n      shouldShowPictometryButton() {\n        return this.$config.pictometry.enabled && !this.isMobileOrTablet;\n      },\n      geolocationEnabled() {\n        if (this.$config.geolocation) {\n          return this.$config.geolocation.enabled;\n        } else {\n          return false;\n        }\n      },\n      activeDorParcel() {\n        // return this.$store.state.activeDorParcel;\n        return this.$store.state.parcels.dor.activeParcel;\n      },\n      legendControls() {\n        return this.$config.legendControls || {};\n      },\n      imageOverlay() {\n        return this.$store.state.map.imageOverlay;\n      },\n      imageOverlayItems() {\n        // console.log('calculating imageOverlayItem');\n        if (this.activeTopicConfig.imageOverlayGroup) {\n          const overlayGroup = this.activeTopicConfig.imageOverlayGroup;\n          const state = this.$store.state;\n          const overlay = this.$config.imageOverlayGroups[overlayGroup].items(state);\n          // console.log('returning imageOverlayItem', overlay);\n          return overlay;\n        } else {\n          return [];\n        }\n      },\n      imageOverlayInfo() {\n        // console.log('config:', this.$config);\n        return this.$config.map.dynamicMapLayers.regmaps;\n      },\n      activeBasemap() {\n        const shouldShowImagery = this.$store.state.map.shouldShowImagery;\n        if (shouldShowImagery) {\n          return this.$store.state.map.imagery;\n        }\n        const defaultBasemap = this.$config.map.defaultBasemap;\n        const basemap = this.$store.state.map.basemap || defaultBasemap;\n        return basemap;\n      },\n      tiledLayers() {\n        const activeBasemap = this.activeBasemap;\n        const activeBasemapConfig = this.configForBasemap(activeBasemap)\n\n        return activeBasemapConfig.tiledLayers || [];\n      },\n      activeTiledOverlays() {\n        if (!this.activeTopicConfig || !this.activeTopicConfig.tiledOverlays) {\n          return [];\n        } else {\n          return this.activeTopicConfig.tiledOverlays;\n        }\n      },\n      activeDynamicMaps() {\n        if (!this.activeTopicConfig || !this.activeTopicConfig.dynamicMapLayers) {\n          return [];\n        } else {\n          return this.activeTopicConfig.dynamicMapLayers;\n        }\n      },\n      activeFeatureLayers() {\n        if (!this.activeTopicConfig || !this.activeTopicConfig.featureLayers) {\n          return [];\n        } else {\n          return this.activeTopicConfig.featureLayers;\n        }\n      },\n      activeFeature() {\n        return this.$store.state.activeFeature;\n      },\n      basemaps() {\n        return Object.values(this.$config.map.basemaps);\n      },\n      imageryBasemaps() {\n        return this.basemaps.filter(basemap => basemap.type === 'imagery');\n      },\n      hasImageryBasemaps() {\n        return this.imageryBasemaps.length > 0;\n      },\n      shouldShowImageryToggle() {\n        if (this.$config.map.imagery) {\n          return this.hasImageryBasemaps && this.$config.map.imagery.enabled;\n        } else {\n          return this.hasImageryBasemaps;\n        }\n      },\n      identifyFeature() {\n        let configFeature;\n        if (this.geocodeType === 'intersection') {\n          configFeature = \"address-marker\";\n        } else if (this.activeTopicConfig.identifyFeature) {\n          configFeature = this.activeTopicConfig.identifyFeature;\n        } else {\n          if (this.$config) {\n            configFeature = this.$config.map.defaultIdentifyFeature;\n          }\n        }\n        return configFeature;\n      },\n      activeTopic() {\n        return this.$store.state.activeTopic;\n      },\n      activeTopicConfig() {\n        const key = this.activeTopic;\n        let config;\n\n        // if no active topic, return null\n        if (key) {\n          config = this.$config.topics.filter((topic) => {\n            return topic.key === key;\n          })[0];\n        }\n\n        return config || {};\n      },\n      activeParcelLayer() {\n        return this.activeTopicConfig.parcels;\n      },\n      dorParcels() {\n        return this.$store.state.parcels.dor.data;\n      },\n      pwdParcel() {\n        return this.$store.state.parcels.pwd;\n      },\n      geocodeResult() {\n        return this.$store.state.geocode.data || {};\n      },\n      geocodeGeom() {\n        return this.geocodeResult.geometry;\n      },\n      geocodeType() {\n        return this.geocodeResult.ais_feature_type;\n      },\n      streetAddress() {\n        return this.geocodeResult.properties.street_address;\n      },\n      picOrCycloActive() {\n        if (this.cyclomediaActive || this.pictometryActive) {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      mapBounds() {\n        // TODO calculate map bounds based on leaflet markers above\n      },\n      boundsBasedOnShape() {\n        return this.$store.state.map.boundsBasedOnShape;\n      },\n      isGeocoding() {\n        return this.$store.state.geocode.status === 'waiting';\n      },\n    },\n    watch: {\n      picOrCycloActive(value) {\n        this.$nextTick(() => {\n          this.$store.state.map.map.invalidateSize();\n        })\n      },\n      geojsonForTopic(nextGeojson) {\n        let czts = this.activeTopicConfig.zoomToShape;\n        let dzts = this.$data.zoomToShape;\n        if (!czts || !czts.includes('geojsonForTopic')) {\n          dzts.geojsonForTopic = [];\n          return;\n        } else {\n          dzts.geojsonForTopic = nextGeojson;\n          // console.log('exiting geojsonForTopic');\n          this.checkBoundsChanges();\n        }\n      },\n\n      geojsonParcels(nextGeojson) {\n        let czts = this.activeTopicConfig.zoomToShape;\n        let dzts = this.$data.zoomToShape;\n        if (!czts || !czts.includes('geojsonParcels')) {\n          dzts.geojsonParcels = [];\n          return;\n        } else {\n          dzts.geojsonParcels = nextGeojson;\n          // console.log('exiting geojsonParcels');\n          this.checkBoundsChanges();\n        }\n      },\n\n      markersForAddress(nextMarkers) {\n        let czts = this.activeTopicConfig.zoomToShape;\n        let dzts = this.$data.zoomToShape;\n        if (!czts || !czts.includes('markersForAddress')) {\n          dzts.markersForAddress = [];\n          return;\n        } else {\n          dzts.markersForAddress = nextMarkers;\n          // console.log('exiting markersForAddress')\n          this.checkBoundsChanges();\n        }\n      },\n\n      // watches computed markersForTopic, adds info to data zoomToShape.markersForTopic\n      // it does not update zoomToShape unless there is a change\n      // because the markers computed recalculates extremely often, this is needed\n      markersForTopic(nextMarkers) {\n        let czts = this.activeTopicConfig.zoomToShape;\n        let dzts = this.$data.zoomToShape;\n        if (!czts || !czts.includes('markersForTopic')) {\n        // if (!czts.includes('markersForTopic')) {\n          dzts.markersForTopic = [];\n          return;\n        } else {\n          dzts.markersForTopic = nextMarkers;\n          // console.log('exiting markersForTopic');\n          this.checkBoundsChanges();\n        }\n      },\n\n      fullScreenTopicsEnabled() {\n        this.$nextTick(() => {\n          this.$store.state.map.map.invalidateSize();\n        })\n      },\n    },\n    methods: {\n      checkBoundsChanges() {\n        let czts = this.activeTopicConfig.zoomToShape;\n        if (!czts) {\n          return;\n        }\n        let dzts = this.$data.zoomToShape;\n        // console.log('dzts:', dzts, 'czts:', czts);\n        let tf = [];\n        for (let shape of czts) {\n          if (dzts[shape] !== false && dzts[shape].length > 0) {\n            tf.push(true);\n          } else {\n            tf.push(false);\n          }\n        }\n        // console.log('MapPanel.vue checkBoundsChanges, tf:', tf);\n        if (tf.includes(false)) {\n          return;\n        } else {\n          this.setMapToBounds();\n        }\n      },\n\n      setMapToBounds() {\n        // console.log('setMapToBounds is running');\n        let featureArray = []\n        let czts = this.activeTopicConfig.zoomToShape;\n        if (czts) {\n          if (czts.includes('geojsonParcels')) {\n            for (let geojsonFeature of this.geojsonParcels) {\n              featureArray.push(geoJSON(geojsonFeature.geojson))\n              // featureArray.push(L.geoJSON(geojsonFeature.geojson))\n            }\n          }\n          if (czts.includes('geojsonForTopic')) {\n            for (let geojsonFeature of this.geojsonForTopic) {\n              featureArray.push(geoJSON(geojsonFeature.geojson))\n              // featureArray.push(L.geoJSON(geojsonFeature.geojson))\n            }\n          }\n          if (czts.includes('markersForAddress')) {\n            for (let marker of this.markersForAddress) {\n              featureArray.push(Lmarker(marker.latlng))\n              // featureArray.push(L.marker(marker.latlng))\n            }\n          }\n          if (czts.includes('markersForTopic')) {\n            for (let marker of this.markersForTopic) {\n              featureArray.push(Lmarker(marker.latlng))\n              // featureArray.push(L.marker(marker.latlng))\n            }\n          }\n          const group = new featureGroup(featureArray);\n          // const group = new L.featureGroup(featureArray);\n          const bounds = group.getBounds();\n          this.$store.commit('setMapBounds', bounds);\n        }\n      },\n      configForBasemap(basemap) {\n        return this.$config.map.basemaps[basemap] || {};\n      },\n      shouldShowGeojson(key) {\n        if (this.activeTopicConfig.basemap === 'pwd') {\n          return true;\n        } else {\n          return key === this.activeDorParcel;\n        }\n      },\n      shouldShowImageOverlay(key) {\n        return key === this.imageOverlay;\n      },\n      shouldShowFeatureLayer(key) {\n        if (this.activeFeatureLayers.includes(key)) {\n          return true;\n        }\n        return false;\n      },\n      handleMapClick(e) {\n        // console.log('MapPanel.vue handleMapClick e:', e);\n        // latLng = L.latLng(e.lat, e.lng)\n        this.$controller.handleMapClick(e);\n      },\n\n      handleMapMove(e) {\n        const map = this.$store.state.map.map;\n\n        const pictometryConfig = this.$config.pictometry || {};\n\n        const center = map.getCenter();\n        const { lat, lng } = center;\n        const coords = [lng, lat];\n\n        if (pictometryConfig.enabled) {\n          // update state for pictometry\n          this.$store.commit('setPictometryMapCenter', coords);\n\n          const zoom = map.getZoom();\n          this.$store.commit('setPictometryMapZoom', zoom);\n        }\n\n        const cyclomediaConfig = this.$config.cyclomedia || {};\n\n        if (cyclomediaConfig.enabled) {\n          // update cyclo recordings\n          this.updateCyclomediaRecordings();\n          this.$store.commit('setCyclomediaLatLngFromMap', [lat, lng]);\n        }\n      },\n      fillColorForCircleMarker(markerId, tableId) {\n        // get map overlay style and hover style for table\n        const tableConfig = this.getConfigForTable(tableId);\n        const mapOverlay = tableConfig.options.mapOverlay;\n        const { style, hoverStyle } = mapOverlay;\n\n        // compare id to active feature id\n        const activeFeature = this.activeFeature;\n        const useHoverStyle = (\n          markerId === activeFeature.featureId &&\n          tableId === activeFeature.tableId\n        );\n        const curStyle = useHoverStyle ? hoverStyle : style;\n\n        return curStyle.fillColor;\n      },\n    }, // end of methods\n  }; //end of export\n</script>\n\n<style scoped>\n  .mb-panel-map {\n    /*this allows the loading mask to fill the div*/\n    position: relative;\n  }\n\n  .mb-map-with-widget {\n    height: 50%;\n  }\n\n  .widget-slot {\n    display: inline-block;\n    float: left;\n  }\n\n  .mb-map-loading-mask {\n    /*display: inline;*/\n    position: absolute;\n    top: 0;\n    height: 100%;\n    width: 100%;\n    background: rgba(0, 0 ,0 , 0.25);\n    z-index: 1000;\n    text-align: center;\n    vertical-align: middle;\n  }\n\n  .mb-map-loading-mask-inner {\n    position: absolute;\n    top: 40%;\n    left: 40%;\n  }\n\n  /*small retina*/\n  /*@media\n  (-webkit-min-device-pixel-ratio: 2),\n  (min-resolution: 192dpi),\n  (max-width: 39.9375em) {\n    .mb-search-control-input {\n      max-width: 250px;\n    }\n  }*/\n\n</style>\n","<template>\n  <div id=\"mb-root\"\n       :class=\"rootClass\"\n       :style=\"mbRootStyle\"\n  >\n\n    <!-- <header-comp v-if=\"shouldShowHeader\" /> -->\n\n    <!-- <div id=\"mb-root\"\n         :class=\"rootClass\"\n         :style=\"mbRootStyle\"\n    > -->\n        <topic-panel :class=\"this.shouldShowTopicPanel\" />\n\n        <map-panel :class=\"this.shouldShowMapPanel\"\n                   v-if=\"this.fullScreenTopicsOnly !== true\"\n        >\n          <cyclomedia-widget v-if=\"this.shouldLoadCyclomediaWidget\"\n                             slot=\"cycloWidget\"\n                             v-show=\"cyclomediaActive\"\n                             screen-percent=\"2\"\n          />\n          <pictometry-widget v-if=\"this.shouldLoadPictometryWidget\"\n                             slot=\"pictWidget\"\n                             v-show=\"pictometryActive\"\n                             :apiKey=\"this.ak\"\n                             :secretKey=\"this.sk\"\n          >\n            <pictometry-png-marker v-if=\"this.pictometryShowAddressMarker\"\n                        :latlng=\"[this.geocodeData.geometry.coordinates[1], this.geocodeData.geometry.coordinates[0]]\"\n                        :icon=\"'images/markers.png'\"\n                        :height=\"60\"\n                        :width=\"40\"\n                        :offsetX=\"0\"\n                        :offsetY=\"0\"\n            />\n            <pictometry-layer v-if=\"this.pictometryActive\" />\n            <pictometry-png-marker v-if=\"this.cyclomediaActive && this.pictometryActive\"\n                        :latlng=\"cycloLatlng\"\n                        :icon=\"'images/camera2.png'\"\n                        :height=\"20\"\n                        :width=\"30\"\n                        :offsetX=\"-2\"\n                        :offsetY=\"-2\"\n            />\n            <pictometry-view-cone v-if=\"this.cyclomediaActive && this.pictometryActive\"\n                       :latlng=\"cycloLatlng\"\n                       :rotationAngle=\"cycloRotationAngle\"\n                       :hFov=\"cycloHFov\"\n            />\n          </pictometry-widget>\n        </map-panel>\n\n        <!-- <popover\n                 v-if=\"popoverOpen\"\n                 :options=\"this.popoverOptions\"\n                 :slots=\"{'text': this.popoverText}\"\n        /> -->\n        <!-- v-if=\"popoverOpen && popoverText.length > 0\" -->\n    <!-- </div> -->\n  </div>\n</template>\n\n<script>\n  // import HeaderComp from './HeaderComp.vue';\n  import TopicPanel from './TopicPanel.vue';\n  import MapPanel from './MapPanel.vue';\n\n  import {\n    CyclomediaWidget,\n    PictometryWidget,\n    PictometryLayer,\n    PictometryViewCone,\n    PictometryPngMarker\n  } from '@cityofphiladelphia/phila-vue-mapping';\n  import { Popover } from '@cityofphiladelphia/phila-vue-comps';\n\n  export default {\n    components: {\n      // HeaderComp,\n      TopicPanel,\n      MapPanel,\n      CyclomediaWidget,\n      PictometryWidget,\n      PictometryLayer,\n      PictometryPngMarker,\n      PictometryViewCone,\n      Popover,\n    },\n    data() {\n      const data = {\n        // this will only affect the app size if the app is set to \"plugin\" mode\n        mbRootStyle: {\n          'height': '100px'\n        }\n      };\n      return data;\n    },\n    created() {\n      console.log('mapboard created, this.$config:', this.$config);\n      if (this.$config.panels) {\n        if (!this.$config.panels.includes('map')) {\n          this.$store.commit('setTopicsOnly', true);\n        } else if (!this.$config.panels.includes('topics')) {\n          this.$store.commit('setMapOnly', true);\n        }\n      }\n      window.addEventListener('click', this.closeAddressCandidateList);\n      window.addEventListener('resize', this.handleWindowResize);\n      this.handleWindowResize();\n    },\n    mounted() {\n      this.$controller.appDidLoad();\n      if (this.$config.initialPopover && window.location.hash == '') {\n        this.$store.commit('setPopoverOpen', true);\n        this.$store.commit('setPopoverOptions', this.$config.initialPopover.options);\n        if (this.$config.initialPopover.slots) {\n          this.$store.commit('setPopoverText', this.$config.initialPopover.slots.text);\n        }\n      }\n    },\n    computed: {\n      shouldShowHeader() {\n        if (this.$config.header) {\n          return this.$config.header.enabled;\n        } else {\n          return false;\n        }\n      },\n      rootClass() {\n        if (this.$config.plugin) {\n          return 'grid-x';\n        } else {\n          return 'cell medium-auto grid-x';\n        }\n      },\n      isMobileOrTablet() {\n        return this.$store.state.isMobileOrTablet;\n      },\n      shouldLoadCyclomediaWidget() {\n        return this.$config.cyclomedia.enabled && !this.isMobileOrTablet;\n      },\n      shouldLoadPictometryWidget() {\n        return this.$config.pictometry.enabled && !this.isMobileOrTablet;\n      },\n      fullScreenMapOnly() {\n        return this.$store.state.fullScreen.mapOnly;\n      },\n      fullScreenMapEnabled() {\n        return this.$store.state.fullScreenMapEnabled;\n      },\n      fullScreenTopicsOnly() {\n        return this.$store.state.fullScreen.topicsOnly;\n      },\n      fullScreenTopicsEnabled() {\n        return this.$store.state.fullScreenTopicsEnabled;\n      },\n      shouldShowTopicPanel() {\n        let value;\n        if (!this.fullScreenMapEnabled && !this.fullScreenMapOnly) {\n          value = 'topic-panel-true';\n        } else {\n          value = 'topic-panel-false';\n        }\n        return value;\n      },\n      shouldShowMapPanel() {\n        let value;\n        if (!this.fullScreenTopicsEnabled && !this.fullScreenTopicsOnly) {\n          value = 'map-panel-true';\n        } else {\n          value = 'map-panel-false';\n        }\n        return value;\n      },\n      cyclomediaActive() {\n        return this.$store.state.cyclomedia.active\n      },\n      cycloLatlng() {\n        if (this.$store.state.cyclomedia.orientation.xyz !== null) {\n          const xyz = this.$store.state.cyclomedia.orientation.xyz;\n          return [xyz[1], xyz[0]];\n        } else {\n          const center = this.$config.map.center;\n          return center;\n        }\n      },\n      cycloRotationAngle() {\n        return this.$store.state.cyclomedia.orientation.yaw * (180/3.14159265359);\n      },\n      cycloHFov() {\n        return this.$store.state.cyclomedia.orientation.hFov;\n      },\n      pictometryActive() {\n        return this.$store.state.pictometry.active\n      },\n      pictometryZoom() {\n        return this.$store.state.pictometry.zoom\n      },\n      pictometryShowAddressMarker() {\n        if (!this.pictometryActive || !this.geocodeData) {\n          return false;\n        } else if (this.pictometryZoom < 20 && this.cyclomediaActive) {\n          return false;\n        } else {\n          return true;\n        }\n      },\n      geocodeData() {\n        return this.$store.state.geocode.data\n      },\n      ak() {\n        const host = window.location.hostname;\n        if (host === 'atlas.phila.gov') {\n          return this.$config.pictometry.apiKey;\n        }\n        if (host === 'atlas-dev.phila.gov') {\n          return this.$config.pictometryDev.apiKey;\n        }\n        if (host === 'cityatlas.phila.gov') {\n          return this.$config.pictometryCity.apiKey;\n        }\n        if (host === 'cityatlas-dev.phila.gov') {\n          return this.$config.pictometryCityDev.apiKey;\n        }\n        if (host === '10.8.101.67') {\n          return this.$config.pictometryLocal.apiKey;\n        }\n      },\n      sk() {\n        const host = window.location.hostname;\n        if (host === 'atlas.phila.gov') {\n          return this.$config.pictometry.secretKey;\n        }\n        if (host === 'atlas-dev.phila.gov') {\n          return this.$config.pictometryDev.secretKey;\n        }\n        if (host === 'cityatlas.phila.gov') {\n          return this.$config.pictometryCity.secretKey;\n        }\n        if (host === 'cityatlas-dev.phila.gov') {\n          return this.$config.pictometryCityDev.secretKey;\n        }\n        if (host === '10.8.101.67') {\n          return this.$config.pictometryLocal.secretKey;\n        }\n      },\n      popoverOpen() {\n        return this.$store.state.popover.open;\n      },\n      popoverText() {\n        return this.$store.state.popover.text;\n      },\n      popoverOptions() {\n        return this.$store.state.popover.options;\n      }\n    },\n    watch: {\n      pictometryShowAddressMarker(nextValue) {\n        console.log('watch pictometryShowAddressMarker', nextValue);\n      }\n    },\n    methods: {\n      closeAddressCandidateList() {\n        this.$store.commit('setShouldShowAddressCandidateList', false);\n      },\n      handleWindowResize() {\n        // this only actually affects the size if it is set to \"plugin mode\"\n        // if ($(window).width() >= 750) {\n        if (window.innerWidth >= 750) {\n          this.mbRootStyle.height = '600px'\n        } else {\n          this.mbRootStyle.height = 'auto';\n        }\n      }\n    },\n  };\n</script>\n\n<style>\n  /*don't highlight any form elements*/\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n    outline: none;\n  }\n\n  .mb-panel-topics-with-widget {\n    height: 50%;\n  }\n\n  /* standards applies padding to buttons, which causes some weirdness with\n  buttons on the map panel. override here. */\n  button {\n    padding: inherit;\n  }\n\n  .topic-panel-false {\n    /* display: none; */\n  }\n\n  @media screen and (min-width: 46.875em) {\n    .topic-panel-false {\n      display: none;\n    }\n\n    .map-panel-false {\n      display: none;\n    }\n  }\n\n</style>\n","function generateUniqueId() {\n  return Math.random().toString(36).substring(7);\n}\n\nexport default generateUniqueId;\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'spinner';\nvar width = 512;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f110';\nvar svgPathData = 'M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faSpinner = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'book';\nvar width = 448;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f02d';\nvar svgPathData = 'M448 360V24c0-13.3-10.7-24-24-24H96C43 0 0 43 0 96v320c0 53 43 96 96 96h328c13.3 0 24-10.7 24-24v-16c0-7.5-3.5-14.3-8.9-18.7-4.2-15.4-4.2-59.3 0-74.7 5.4-4.3 8.9-11.1 8.9-18.6zM128 134c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm0 64c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm253.4 250H96c-17.7 0-32-14.3-32-32 0-17.6 14.4-32 32-32h285.4c-1.9 17.1-1.9 46.9 0 64z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faBook = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'wrench';\nvar width = 512;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f0ad';\nvar svgPathData = 'M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faWrench = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'university';\nvar width = 512;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f19c';\nvar svgPathData = 'M496 128v16a8 8 0 0 1-8 8h-24v12c0 6.627-5.373 12-12 12H60c-6.627 0-12-5.373-12-12v-12H24a8 8 0 0 1-8-8v-16a8 8 0 0 1 4.941-7.392l232-88a7.996 7.996 0 0 1 6.118 0l232 88A8 8 0 0 1 496 128zm-24 304H40c-13.255 0-24 10.745-24 24v16a8 8 0 0 0 8 8h464a8 8 0 0 0 8-8v-16c0-13.255-10.745-24-24-24zM96 192v192H60c-6.627 0-12 5.373-12 12v20h416v-20c0-6.627-5.373-12-12-12h-36V192h-64v192h-64V192h-64v192h-64V192H96z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faUniversity = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'gavel';\nvar width = 512;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f0e3';\nvar svgPathData = 'M504.971 199.362l-22.627-22.627c-9.373-9.373-24.569-9.373-33.941 0l-5.657 5.657L329.608 69.255l5.657-5.657c9.373-9.373 9.373-24.569 0-33.941L312.638 7.029c-9.373-9.373-24.569-9.373-33.941 0L154.246 131.48c-9.373 9.373-9.373 24.569 0 33.941l22.627 22.627c9.373 9.373 24.569 9.373 33.941 0l5.657-5.657 39.598 39.598-81.04 81.04-5.657-5.657c-12.497-12.497-32.758-12.497-45.255 0L9.373 412.118c-12.497 12.497-12.497 32.758 0 45.255l45.255 45.255c12.497 12.497 32.758 12.497 45.255 0l114.745-114.745c12.497-12.497 12.497-32.758 0-45.255l-5.657-5.657 81.04-81.04 39.598 39.598-5.657 5.657c-9.373 9.373-9.373 24.569 0 33.941l22.627 22.627c9.373 9.373 24.569 9.373 33.941 0l124.451-124.451c9.372-9.372 9.372-24.568 0-33.941z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faGavel = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","import Vue from 'vue';\nimport axios from 'axios';\nimport createStore from './store';\nimport configMixin from './util/config-mixin';\nimport Mapboard from './components/Mapboard.vue';\nimport mergeDeep from './util/merge-deep';\nimport generateUniqueId from './util/unique-id';\n\n// Font Awesome Icons\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faSpinner } from '@fortawesome/pro-solid-svg-icons/faSpinner';\nimport { faBook } from '@fortawesome/pro-solid-svg-icons/faBook';\nimport { faWrench } from '@fortawesome/pro-solid-svg-icons/faWrench';\nimport { faUniversity } from '@fortawesome/pro-solid-svg-icons/faUniversity';\nimport { faGavel } from '@fortawesome/pro-solid-svg-icons/faGavel';\nlibrary.add(faSpinner, faBook, faWrench, faUniversity, faGavel);\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\n\nimport philaVueDatafetch from '@cityofphiladelphia/phila-vue-datafetch';\nconst controllerMixin = philaVueDatafetch.controllerMixin;\n\n// helper function to auto-assign ids to horizontal tables\nfunction assignTableIds(comps) {\n  for (let comp of comps) {\n    const options = comp.options || {};\n    const innerComps = options.components || options.tables;\n\n    // if this is a \"group\" component, recurse\n    if (innerComps) {\n      assignTableIds(innerComps);\n      // return;\n    }\n\n    // skip comps that aren't horizontal tables\n    if (comp.type !== 'horizontal-table') {\n      continue;\n    }\n\n     const id = generateUniqueId();\n     comp._id = id;\n     // the id also needs to get passed to the horizontal table component, so\n     // use the options object.\n     comp.options.tableId = id;\n  }\n}\n\nfunction assignHorizontalTableGroupIds(comps) {\n  for (let comp of comps) {\n    const options = comp.options || {};\n    const innerComps = options.tables;\n\n    // if this is a \"group\" component, recurse\n    if (!innerComps) {\n      continue;\n    }\n\n    // skip comps that aren't horizontal table groups\n    if (comp.type !== 'horizontal-table-group') {\n      continue;\n    }\n\n     const id = generateUniqueId();\n     comp._id = id;\n     // the id also needs to get passed to the horizontal table component, so\n     // use the options object.\n     comp.options.horizontalTableGroupId = id;\n  }\n}\n\nfunction initMapboard(clientConfig) {\n  const baseConfigUrl = clientConfig.baseConfig;\n  // console.log('baseConfigUrl:', baseConfigUrl);\n\n  // get base config\n  return axios.get(baseConfigUrl).then(response => {\n    // console.log('in axios, clientConfig:', clientConfig);\n    const data = response.data;\n    // const data = baseConfigUrl;\n\n    // parse raw js. yes, it's ok to use eval :)\n    // http://stackoverflow.com/a/87260/676001\n    const baseConfigFn = eval(data);\n    const { gatekeeperKey } = clientConfig;\n    const baseConfig = baseConfigFn({ gatekeeperKey });\n\n    // deep merge base config and client config\n    const config = mergeDeep(baseConfig, clientConfig);\n    // const config = mergeDeep(baseConfigUrl, clientConfig);\n\n    // assign table ids\n    for (let topic of config.topics) {\n      assignTableIds(topic.components);\n      assignHorizontalTableGroupIds(topic.components);\n    }\n\n    // make config accessible from each component via this.$config\n    Vue.use(configMixin, config);\n\n    // create store\n    const store = createStore(config);\n\n    // mix in controller\n    Vue.use(controllerMixin, { config, store });\n    // Vue.use(controllerMixin, { config, store, eventBus });\n\n    Vue.component('font-awesome-icon', FontAwesomeIcon);\n    // Vue.config.productionTip = false\n\n    const customComps = clientConfig.customComps || [];\n    // console.log('mapboard main.js, customComps:', customComps);\n    for (let key of Object.keys(customComps)) {\n      Vue.component(key, customComps[key]);\n    }\n\n    // mount main vue\n    const vm = new Vue({\n      el: config.el || '#mapboard',\n      render: h => h(Mapboard),\n      store\n    });\n\n  }).catch(err => {\n    console.error('Error loading base config:', err);\n  });\n}\n\nexport default initMapboard;\n\n// also expose the vue component as a named export\nexport { Mapboard };\n"],"sourceRoot":""}